% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distribution.R
\name{distribution}
\alias{distribution}
\alias{distribution<-}
\title{define a distribution over greta arrays}
\usage{
distribution(greta_array) <- value

distribution(greta_array)
}
\arguments{
\item{greta_array}{a greta array. For the assignment method it must not
already have a probability distribution assigned.}

\item{value}{a greta array with a distribution (see
\code{\link{distributions}})}
}
\description{
\code{distribution} defines probability distributions over greta
arrays, e.g. to set a model likelihood, or a prior. the \code{description}
function provided by greta.funprior differs from the version in greta in
that it allows you to define functions over (almost) any greta array, be it
a data, variable or operation greta array. The only exceptions are greta
arrays that already have a distribution (there can be only one) and greta
arrays created with discrete operations (we can't compute a gradient).
}
\details{
To enable users to set distributions on variables and operations
whilst ensuring a valid model, greta.funprior computes the appropriate log
Jacobian determinant adjustment by automatic differentiation and adds this
to the model definition for you.

The extract method returns the greta array if it has a distribution,
or \code{NULL} if it doesn't. It has no real use-case, but is included for
completeness
}
\examples{
\dontrun{

# define a model likelihood

# observed data and mean parameter to be estimated
# (explicitly coerce data to a greta array so we can refer to it later)
y <- as_data(rnorm(5, 0, 3))

mu <- uniform(-3, 3)

# define the distribution over y (the model likelihood)
distribution(y) <- normal(mu, 1)

# get the distribution over y
distribution(y)

# more involved example setting a prior over a summary statistic of a model
# growth function
growth <- function (age, alpha, beta, gamma) {
  age2 <- (age - 5) ^ 2
  (alpha * age2) / (beta + age2) + gamma
}

# true parameters
alpha_true <- 3
beta_true <- 5
gamma_true <- 170
sd_true <- 3

# fake data
n <- 100
ages <- runif(n, 0, 50)
mean_heights_true <- growth(ages, alpha_true, beta_true, gamma_true)
heights <- rnorm(n, mean_heights_true, sd_true)

# growth model parameters - improper flat priors on these
alpha <- variable()
beta <- variable(lower = 0)
gamma <- variable(lower = 0)

# the likelihood
sd <- cauchy(0, 1, truncation = c(0, Inf))
mean_heights <- growth(ages, alpha, beta, gamma)
distribution(heights) <- normal(mean_heights, sd)

# we have prior knowledge that the population mean height at age 25 is around
# 171, with a standard deviation (estimation error) of 0.5. We also have prior
# knowledge that the maximum year-on-year growth is around 30cm, with standard
# deviation 5, but must be positive. We provide some code specifying this prior
# belief
time_diff <- 1
n <- 30
time_seq <- seq(1, n, by = time_diff)
height_seq <- growth(time_seq, alpha, beta, gamma)
height_diffs <- height_seq[-1] - height_seq[-n]
grad <- height_diffs / time_diff

max_grad <- max(grad)
height_25 <- growth(25, alpha, beta, gamma)

distribution(max_grad) <- normal(13, 5, truncation = c(0, Inf))
distribution(height_25) <- normal(160, 0.5)

# greta.funprior will automatically compute the necessary gradient adjustments
# to make this a valid model

m <- model(alpha, beta, gamma, sd)
}
}
